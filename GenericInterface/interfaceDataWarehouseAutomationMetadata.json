{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/RoelantVos/Data_Warehouse_Automation_Metadata_Interface/GenericInterface/interfaceDataWarehouseAutomationMetadata.json",
  "title": "interfaceDataWarehouseAutomationMetadata",
  "description": "Standardised format for the required metadata to generate ETL and DDL structures available for a Data Warehouse solution. The intent is to separate / decouple how individual software stores Data Warehouse Automation metadata and how this metadata can be exposed to other components, technologies and solutions for ETL and database structure generation.",
  "type": "object",
  "required": [
    "dataObjectMappingList"
  ],
  "properties": {
    "dataObjectMappingList": {
      "$ref": "#/definitions/dataObjectMappingList"
    }
  },
  "definitions": {
    "dataObjectMappingList": {
      "$id": "#/definitions/dataObjectMappingList",
      "title": "List of DataObject mappings.",
      "description": "The list (array) of mappings between Data Objects (source-to-target mappings).",
      "type": [ "array", "null" ],
      "items": {
        "name": [ "string", "null" ],
        "$ref": "#/definitions/dataObjectMapping"
      }
    },
    "dataObjectMapping": {
      "$id": "#/definitions/dataObjectMapping",
      "title": "The individual Data Object mappings.",
      "description": "A mapping between a source and a target.",
      "type": "object",
      "required": [
        "sourceDataObject",
        "targetDataObject",
        "dataItemMapping"
      ],
      "properties": {
        "mappingName": {
          "$id": "#/definitions/dataObjectMapping/properties/dataObjectMappingName",
          "description": "Unique name which identifies the mapping.",
          "type": [ "string", "null" ]
        },
        "mappingClassification": {
          "$id": "#/definitions/dataObjectMapping/properties/dataObjectMappingClassification",
          "description": "Classification for the source-to-target mapping (free form).",
          "type": ["array", "null"],
          "items": {
            "$ref": "#/definitions/classification"
          },
          "minItems": 0,
          "uniqueItems": true
        },
        "sourceDataObject": {
          "$id": "#/definitions/dataObjectMapping/properties/sourceDataObject",
          "description": "The source object of the mapping. This can either be an object or a query.",
          "oneOf": [
            {
              "$ref": "#/definitions/dataObject"
            },
            {
              "$ref": "#/definitions/dataQuery"
            }
          ]
        },
        "targetDataObject": {
          "$id": "#/definitions/dataObjectMapping/properties/targetDataObject",
          "description": "The target object of the mapping.",
          "$ref": "#/definitions/dataObject"
        },
        "relatedDataObject": {
          "$id": "#/definitions/dataObjectMapping/properties/relatedDataObject",
          "description": "The collection of data objects with a different relationship than either source or target e.g. lookup.",
          "type": [ "array", "null" ],
          "items": {
            "$ref": "#/definitions/dataObject"
          }
        },
        "dataItemMapping": {
          "$id": "#/definitions/dataObjectMapping/properties/dataItemMapping",
          "description": "The collection of column-to-column mappings.",
          "type": [ "array", "null" ],
          "items": {
            "$ref": "#/definitions/dataItemMapping"
          }
        },
        "businessKey": {
          "$id": "#/definitions/dataObjectMapping/properties/businessKey",
          "description": "The Business Key definition for the mapping.",
          "type": [ "array", "null" ],
          "items": {
            "$ref": "#/definitions/businessKeyDefinition"
          }
        },
        "filterCriterion": {
          "$id": "#/definitions/dataObjectMapping/properties/filterCriterion",
          "description": "Any filtering that needs to be applied to the dataObjectMapping.",
          "type": [ "string", "null" ]
        },
        "enabled": {
          "$id": "#/definitions/dataObjectMapping/properties/enabled",
          "description": "The source object of the mapping.",
          "type": [ "boolean", "null" ]
        }
      }
    },
    "classification": {
      "$id": "#/definitions/dataObjectMappingClassification",
      "title": "List of source-to-target mapping classifications.",
      "description": "Classification for the source-to-target mapping (free form), used to add various tags and notes if required.",
      "type": "object",
      "required": [ "classification" ],
      "properties": {
        "id": {
          "$id": "#/definitions/dataObjectMappingClassification/properties/id",
          "type": "integer",
          "title": "ClassificationId",
          "description": "An optional unique identifier for classification, for sorting or identification purposes."
        },
        "classification": {
          "$id": "#/definitions/dataObjectMappingClassification/properties/classification",
          "type": "string",
          "title": "Classification",
          "description": "A free-form name that adds documentation / classification to an object."
        },
        "notes": {
          "$id": "#/definitions/dataObjectMappingClassification/properties/notes",
          "type": "string",
          "title": "Classification Notes",
          "description": "Any additional information to be added to the classification."
        }
      }
    },
    "dataObject": {
      "$id": "#/definitions/dataObject",
      "type": "object",
      "title": "DataObject",
      "description": "The generic table of file definition. Any kind of entity, i.e. data set, query, object, file or table.",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "$id": "#/definitions/dataObject/properties/dataObjectId",
          "type": "integer",
          "title": "",
          "description": "Optional unique identifier for a file/table."
        },
        "name": {
          "$id": "#/definitions/dataObject/properties/dataObjectName",
          "type": "string",
          "title": "",
          "description": "Mandatory unique name of the file/table."
        },
        "dataItems": {
          "$id": "#/definitions/dataObject/properties/dataItems",
          "type": [ "array", "null" ],
          "title": "",
          "description": "Optional - collection of dataItems for a table or file. Elements that define the dat set.",
          "items": {
            "$ref": "#/definitions/dataItem"
          }
        },
        "dataObjectConnection": {
          "$id": "#/definitions/dataObject/properties/dataObjectConnection",
          "type": [ "object", "null" ],
          "title": "",
          "description": "",
          "$ref": "#/definitions/dataConnection"
        },
        "dataObjectClassification": {
          "$id": "#/definitions/dataObject/properties/dataObjectClassification",
          "description": "Classification for the dataObject (free form).",
          "type": [ "array", "null" ],
          "items": {
            "$ref": "#/definitions/classification"
          },
          "minItems": 0,
          "uniqueItems": true
        }
      }
    },
    "dataQuery": {
      "description": "A query, which can act as a source for either a dataObject or dataItem.",
      "required": [ "dataQueryCode"],
      "type": "object",
      "properties": {
        "dataQueryName": {
          "$id": "#/definitions/dataQuery/properties/dataQueryName",
          "type": "string",
          "title": "",
          "description": "An optional name for the query"
        },
        "dataQueryCode": {
          "$id": "#/definitions/dataQuery/properties/dataQueryCode",
          "type": "string",
          "title": "",
          "description": "The actual code that constitutes the query."
        },
        "dataQueryLanguage": {
          "$id": "#/definitions/dataQuery/properties/dataQueryLanguage",
          "type": "string",
          "title": "",
          "description": "The language that the code was written in (e.g. SQL)."
        },
        "dataQueryConnection": {
          "$id": "#/definitions/dataQuery/properties/dataQueryConnection",
          "description": "The connection for the query.",
          "$ref": "#/definitions/dataConnection"
        },
        "dataQueryClassification": {
          "$id": "#/definitions/dataObject/properties/dataObjectClassification",
          "description": "Classification for the dataObject (free form).",
          "type": [ "array", "null" ],
          "items": {
            "$ref": "#/definitions/classification"
          },
          "minItems": 0,
          "uniqueItems": true
        }
      }
    },
    "dataConnection": {
      "description": "Optional connectivity information, that can be used for either a DataObject or DataQuery.",
      "required": [ "dataConnectionString" ],
      "type": [ "object", "null" ],
      "properties": {
        "dataConnectionString": {
          "$id": "#/definitions/dataConnection/properties/dataConnectionString",
          "type": [ "string", "null" ],
          "title": "",
          "description": "A connection token, key or string"
        }
      }
    },
    "businessKeyDefinition": {
      "description": "The generic definition of business key.",
      "required": [ "businessKeyComponentMapping" ],
      "type": "object",
      "properties": {
        "surrogateKey": {
          "description": "An optional label for the end result e.g. the target business key attribute.",
          "type": [ "string", "null" ]
        },
        "businessKeyComponentMapping": {
          "description": "Items that define the Business Key e.g. the collection of columns for a Business Key.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/dataItemMapping"
          }
        },
        "businessKeyClassification": {
          "$id": "#/definitions/dataObject/properties/dataObjectClassification",
          "description": "Classification for the dataObject (free form).",
          "type": [ "array", "null" ],
          "items": {
            "$ref": "#/definitions/classification"
          },
          "minItems": 0,
          "uniqueItems": true
        }
      }
    },
    "dataItem": {
      "$id": "#/definitions/dataItem",
      "description": "The generic definition of a column. A column, attribute or item in a dataObject.",
      "type": "object",
      "required": [ "name" ],
      "properties": {
        "name": {
          "description": "Unique name which identifies the column / attribute.",
          "type": "string"
        },
        "dataType": {
          "description": "Optional. Label of the data type",
          "type": [ "string", "null" ]
        },
        "characterLength": {
          "description": "Optional. Length of the item in case it is text.",
          "type": [ "integer", "null" ]
        },
        "numericPrecision": {
          "description": "The number of digits in a numeric value (number).",
          "type": [ "integer", "null" ]
        },
        "numericScale": {
          "description": "The number of digits to the right of the decimal point.",
          "type": [ "integer", "null" ]
        },
        "ordinalPosition": {
          "description": "Optional. The position of items in the data object.",
          "type": [ "integer", "null" ]
        },
        "isPrimaryKey": {
          "description": "Boolean value indicating if the item is a Primary Key.",
          "type": [ "boolean", "null" ]
        },
        "dataItemClassification": {
          "$id": "#/definitions/dataObject/properties/dataObjectClassification",
          "description": "Classification for the dataObject (free form).",
          "type": [ "array", "null" ],
          "items": {
            "$ref": "#/definitions/classification"
          },
          "minItems": 0,
          "uniqueItems": true
        }
      }
    },
    "dataItemMapping": {
      "$id": "#/definitions/dataItemMapping",
      "title": "The individual mappings between Data Items",
      "description": "A mapping between a source and a target columns or attributes",
      "type": "object",
      "required": [
        "sourceDataItem",
        "targetDataItem"
      ],
      "properties": {
        "sourceDataItem": {
          "$id": "#/definitions/dataObjectMapping/properties/sourceDataObject",
          "description": "The source object of the mapping. This can either be an object or a query.",
          "oneOf": [
            {
              "$ref": "#/definitions/dataItem"
            },
            {
              "$ref": "#/definitions/dataQuery"
            }
          ]
        },
        "targetDataItem": {
          "$id": "#/definitions/dataObjectMapping/properties/targetDataObject",
          "description": "The target object of the mapping.",
          "$ref": "#/definitions/dataItem"
        }
      }
    }
  }
} 