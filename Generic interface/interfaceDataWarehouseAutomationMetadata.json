{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "",
  "title": "interfaceDataWarehouseAutomationMetadata",
  "description": "Standardardised format for the required metadata to generate ETL and DDL structures available for a Data Warehouse solution. The intent is to separate / decouple how individual software stores Data Warehouse Automation metadata and how this metadata can be exposed to other components, technologies and solutions for ETL and database structure generation.",
  //
  // Definitions: the overview of reusable objects.
  //
  "definitions": 
  {
  	"dataObject": // The generic table of file definition.
    {
      "$id": "#/definitions/dataObject",
      "description": "Any kind of entity, i.e. data set, query, object, file or table.",
      "type": "object",
      "properties": 
      {
      	"dataObjectId": {
          "description": "Optional unique identifier for a file/table.",
          "type": "integer"
        },
        "dataObjectName": {
          "description": "Mandatory unique name of the file/table.",
          "type": "string"          
        },
        "dataObjectType": {
          "description": "Optional classification of the object (query, file, table).",
          "type": "string"          
        },          
        "dataItems": { // Optional - collection of dataItems for a table or file.
          "description": "Elements that define the dataset.",
          "type": "array","items": {
            "$ref": "#/definitions/dataItem"
          }
        }
      },
      // Mandatory elements for a data object, only the name is really required.
  	  "required" : ["name"] 
    }, 
    // End of dataObject segment.
    //
    // Start of dataItem segment.
    "dataItem": { // The generic definition of a column.
      "description": "A column, attribute or item in a dataObject.",     
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique name which identifies the column / attribute.",
          "type": "string"
        },
        "dataType": {
          "description": "Optional. Label of the data type",
          "type": "string"
        },
        "characterLength": {
          "description": "Optional. Length of the item in case it is text.",
          "type": "integer"
        },
        "numericPrecision": {
          "description": "The number of digits in a numeric value (number).",
          "type": "integer"
        },
        "numericScale": {
          "description": "The number of digits to the right of the decimal point.",
          "type": "integer"
        },
        "ordinalPosition": {
          "description": "Optional. The position of items in the data object.",
          "type": "integer"
        },
        "isPrimaryKey": {
          "description": "Boolean value indicating if the item is a Primary Key.",
          "type": "boolean"
        }
      },
      // Mandatory elements for a data item, only the name is really required.
  	  "required" : ["name"] 
    },
    // End of dataItem.
    //
    // Start of key definition.
    "businessKeyDefinition": 
    { // The generic definition of business key.
      "description": "The generic definition of business key.",
      "required": ["businessKeyComponents"],
      "type": "object",
      "properties": {
        "businessKeyComponentBehaviour": { // Supporting composition, concatentation.
          "description": "Specification of what to do with the Business Key.",
          "type": "string"
        },
        "businessKeyComponents": { // The collection of columns for a Business Key.
          "description": "Items that define the Business Key.",
          "type": "array","items": {
            "$ref": "#/definitions/dataItem"
          }
        },
      },
    }
    // End of key definition
  }, 
  // 
  // End of reusable objects
  //
  // Main object definition
  //
  "dataObjectMapping" :
  {
    "description" : "List of source-to-target mappings",
    "type" : "array",
    "items" : 
    {
      "dataObjectMappingName": {
          "description": "Unique name which identifies the mapping.",
          "type": "string"
      },
      "dataObjectMappingClassification": {
        "description": "Classification for the mapping (free form).",
        "type": "array",
        "items": {
          "type": "string"
        },
        "minItems": 0,
        "uniqueItems": true
      },        
      "sourceDataObject": {
        "description": "The source object of the mapping.",
        "$ref": "#/definitions/dataObject"
      },  
      "targetDataObject": {
        "description": "The target object of the mapping.",
        "$ref": "#/definitions/dataObject"
      },  
      "enabled": {
        "description": "The source object of the mapping.",
        "type" : "boolean"
      },
      "dataItemMapping": {
        "description": "The collection of column-to-column mappings",
        "type": "array",
        "items": {
          "description": "Individual item mappings",
          "type": "object",
          "oneOf": [
            {
              "properties": {
                "sourceDataItem": {
                  "$ref": "#/definitions/dataItem"
                },
                "targetDataItem": {
                  "$ref": "#/definitions/dataItem"
                }
              },
              "required": ["sourceDataItem","targetDataItem"]
            }
          ]
        },
        "minItems": 1,
        "uniqueItems": true
      }      
    },
    "required": ["sourceDataObject","targetDataObject", "dataItemMapping"]   
  }
} 